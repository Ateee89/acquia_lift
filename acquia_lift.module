<?php

/**
 * @file
 * Drupal Module: Acquia Lift
 *
 * Acquia Lift lets you track customers' behavior throughout their buying
 * journey â€” from anonymous visitor through to loyal customer. Acquia Lift
 * allows you to create a unified customer profile for each individual, based
 * on their interactions with your website. Using these profiles, Acquia Lift
 * adaptively segments customers in real-time, letting you deliver personalized
 * content that furthers your website visitors' engagement with your brand.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function acquia_lift_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'acquia_lift.admin_settings_form':
      $help_message = t('You can find more info in <a href=":documentation_url" target="_blank">Documentation</a>', [':documentation_url' => 'https://docs.acquia.com/lift/']);
      $credential_settings = \Drupal::config('acquia_lift.settings')->get('credential');
      if(!empty($credential_settings['api_url'])) {
        $help_message .= t(', and control your web services settings at <a href=":acquia_lift_web_admin_url" target="_blank">Acquia Lift Web Admin</a>', [':acquia_lift_web_admin_url' => 'https://' . $credential_settings['api_url']]);
      }
      $help_message .= t('.');
      return $help_message;
  }
}

/**
 * Implements hook_page_attachments() to insert JavaScript to the appropriate scope/region of the page.
 */
function acquia_lift_page_attachments(array &$page) {
  $page_attachments_manager = \Drupal::service('acquia_lift.service.page.page_attachments_manager');
  if (!$page_attachments_manager->shouldAttach()) {
    return;
  }

  $page['#attached']['drupalSettings']['acquia_lift'] = $page_attachments_manager->getDrupalSettings();
  $page['#attached']['library'][] = $page_attachments_manager->getLibrary();
}

/**
 * Implements hook_ENTITY_TYPE_view_alter() for node entities.
 */
function acquia_lift_node_view_alter(array &$build, EntityInterface $node, EntityViewDisplayInterface $display) {
  // When viewing a node, create populate its page context.
  if ($display->getOriginalMode() !== 'full') {
    return;
  }

  \Drupal::service('acquia_lift.service.context.page_context')->set($node);
}
